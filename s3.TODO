#!/bin/bash
map="Frums - Pictured as Perfect and Plus (K 3 V R A L) [[]!) []= \`\$[-_=  !'' -$...].osu";
dist=4;
lc=$(($(sed -n -e '/\[HitObjects\]/,$p' "$map" | tail -n +2 | wc -l) - 1));
if [ "$lc" -lt "0" ]; then
	lc=0;
fi

#w_spin_t=(261892 261971 262076 262155 262260 262339);
w_spin_t=(300000);
w_spin="";
for i in ${w_spin_t[@]}; do
        w_spin="$w_spin -w $i:1";
done

seq_part=1;
for k in $(seq 0 $seq_part); do
        if [ "$k" -eq "0" ]; then
		# Part 1 & 2
		bnpd_l="";
		bnpd_r="";
		seq_end=1;
		for j in $(seq 0 $seq_end); do
			start_time=$((262444 + (2527 * $j)));
			dir=$((-64 * (1 + $j)));
			floor=$((64 * $j));
			ceiling=$((512 - (128 + $floor)));
			repeat=$(((12 / ($j + 1)) - 1));
			x_axis=192;

			for i in $(seq 0 $repeat); do
				x_left=$x_axis;
				x_right=$(($x_left + 128));
				time_s=$(($start_time + ($i * 211)));
				time_e=$(($time_s + 158));

				temp_dir=$(($x_axis + $dir));
				if [ "$temp_dir" -lt "$floor" ] || [ "$temp_dir" -gt "$ceiling" ]; then
					dir=$((-1 * $dir));
				fi
				x_axis=$(($x_axis + $dir));

				echo "$k/$seq_part | $j/$seq_end | $i/$repeat | $time_s , $time_e | $x_left , $x_right";

				bnpd_l="$bnpd_l|$x_left:$time_s|$x_left:$time_e";
				bnpd_r="$x_right:$time_e|$x_right:$time_s|$bnpd_r";
			done
		done
		x_left=$x_axis;
		x_right=$(($x_left + 128));
		time=266444;

		echo "$k/$seq_part | $time | $x_left , $x_right";

		bnpd_l="$bnpd_l|$x_left:$time";
		bnpd_r="$x_right:$time|$bnpd_r";

		bnpd_l=$(echo "$bnpd_l" | tail -c +2);
		bnpd_r=$(echo "$bnpd_r" | head -c -2);

		lc_new=$(wc -l < "$map");

		bnprdctr -b "$map" -o /tmp/file.osu -s "$bnpd_l|$bnpd_r" $w_spin -d "$dist" \
		&& cat /tmp/file.osu >> "$map";

		lc=$(($(wc -l < "$map") - $lc_new + $lc));
	elif [ "$k" -eq "1" ]; then
		# Part 3 

		# Triangle TODO
		bnpd_t="";
		radius=100;
		seq_i=2;
		for i in $(seq 0 $seq_i); do
			x=$(printf "%.0f" "$(echo "100 + ($radius * c ($i * 2 * ((4 * a (1)) / 3)))" | bc -l)");
			time=$(printf "%.0f" "$(echo "266549 + ($radius * s ($i * 2 * ((4 * a (1)) / 3)))" | bc -l)");

			echo "$k/$seq_part | $i/$seq_i | $x , $time";

			bnpd_t="$bnpd_t|$x:$time";
		done
		bnpd_t=$(echo "$bnpd_t" | tail -c +2);
		echo "$bnpd_t";

		# Square TODO
		bnpd_s="";
		# echo "$k/$seq_part | $bnpd_s";

		# Circle TODO Mathematically calculate a circle.
		bnpd_c="";
		# echo "$k/$seq_part | $bnpd_c";

		lc_new=$(wc -l < "$map");

		bnprdctr -b "$map" -o /tmp/file.osu -s $bnpd_t -s $bnpd_s $w_spin -d "$dist" -u "$lc" \
		&& cat /tmp/file.osu >> "$map";

		lc=$(($(wc -l < "$map") - $lc_new + $lc));

	fi
done
